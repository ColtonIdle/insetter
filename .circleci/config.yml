version: 2.0

workspace: &workspace
  ~/insetter

config_android: &config_android
  docker:
    - image: circleci/android:api-29
  working_directory: *workspace
  environment:
    JAVA_TOOL_OPTIONS: "-Xmx1024m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dkotlin.incremental=false"
    TERM: dumb

update_sdk: &update_sdk
  run:
    name: Update SDK
    command: |
      yes | sdkmanager --licenses || true
      sdkmanager "platform-tools" "platforms;android-29"

gen_cache_key: &gen_cache_key
  run:
    name: Generate cache key
    command: ./checksum.sh /tmp/checksum.txt

restore_cache: &restore_cache
  restore_cache:
    key: gradle-{{ checksum "/tmp/checksum.txt" }}

save_cache: &save_cache
  save_cache:
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper
    key: gradle-{{ checksum "/tmp/checksum.txt" }}

attach_workspace: &attach_workspace
  attach_workspace:
    at: *workspace

persist_workspace: &persist_workspace
  persist_to_workspace:
    root: *workspace
    paths:
      - ./*/build

jobs:
  build_debug:
    <<: *config_android
    steps:
      - <<: *update_sdk
      - checkout
      - <<: *gen_cache_key
      - <<: *restore_cache
      - run:
          name: Download Dependencies
          command: ./gradlew dependencies
      - run:
          name: Assemble
          command: ./gradlew assembleDebug
      - <<: *save_cache
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
      - <<: *persist_workspace

  check:
    <<: *config_android
    steps:
      - <<: *update_sdk
      - checkout
      - <<: *attach_workspace
      - <<: *gen_cache_key
      - <<: *restore_cache
      - run:
          name: Check
          command: ./gradlew lintDebug testDebug spotlessCheck
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  deploy_to_sonatype:
    <<: *config_android
    steps:
      - <<: *update_sdk
      - checkout
      - <<: *attach_workspace
      - <<: *gen_cache_key
      - <<: *restore_cache
      - <<: *attach_workspace
      - run:
          name: Deploy to Sonatype
          command: ./gradlew uploadArchives --no-daemon --no-parallel

workflows:
  version: 2
  build_check:
    jobs:
      - build_debug
      - check:
          requires:
            - build_debug
      - deploy_to_sonatype:
          requires:
            - check
          filters:
            branches:
              only: master
